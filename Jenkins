pipeline
{
    environment
    {
        registry = "kramiyer/capstonekramesh"
        registryCredential = 'dockerhub'
        dockerImage = ''
    }

    agent any
    stages
    {
        stage('initial slack message')
        {
            steps
            {
                sh 'echo Building...'
                slackSend message:"Build Started - ${env.JOB_NAME}"
            }
        }
        stage('linting Dockerfile')
        {
            steps
            {
                script
                {
                    docker.image('hadolint/hadolint:latest-debian').inside()
                    {
                        sh 'hadolint Dockerfile'
                        
                        slackSend message:"Linting Dockefile- ${env.JOB_NAME}"
                    }
                }
            }
        }
        stage('Build Docker')
        {
            steps
            {
                script
                {
                    dockerImage = docker.build registry + ":$BUILD_NUMBER"
                    slackSend message:"Built- ${env.JOB_NAME}- ${registry}- ${BUILD_NUMBER}"
                }
            }
        }
        stage('Push Docker')
        {
            steps
            {
                script
                {
                    
                    withDockerRegistry([url:"", credentialsId: "dockerhub"])
                    {
                        dockerImage.push()
                        slackSend message:"Successfully pushed Docker image"
                    }
                }
            }
        }
        stage('Deployment')
        {
            steps
            {
                script
                {
                    withAWS(credentials: 'aws', region: 'us-west-2')
                    {
                        sh 'kubectl config use-context arn:aws:eks:us-west-2:297516697101:cluster/capstonekram'
                        sh 'kubectl run capstonekramesh --image=kramiyer/capstonekramesh:$BUILD_NUMBER'
                        sh 'kubectl get nodes'
                        sh 'kubectl get deployments'
                        sh "kubectl get service/capstonekramesh"
                        sh 'kubectl port-forward capstonekramesh 8000:5001'
                        
                    }
                }
            }
        }
        stage('Rollout')
        {
            steps
            {
                withAWS(credentials: 'aws', region: 'us-west-2')
                {
                    sh 'kubectl rollout status deployments/capstonekramesh'

                }
                
            }
        }
        stage('cleanup')
        {
            steps
            {
                sh 'docker system prune'
            }
        }
    }
}